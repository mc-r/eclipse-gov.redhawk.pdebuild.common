<project name="customTargets overrides" >
    <import file="${eclipse.pdebuild.templates}/headless-build/customTargets.xml"/>

    <target name="postSetup">
	<copy todir="${buildDirectory}/plugins">
	    <fileset dir="${basedir}/../plugins">
	        <exclude name="**/*.class"/>
	    </fileset>
      	</copy>
	<copy todir="${buildDirectory}/features">
	    <fileset dir="${basedir}/../features"/>
      	</copy>	
      	<copy todir="${buildDirectory}/features">
	    <fileset dir="${basedir}/pdebuild">
	    	<include name="gov.redhawk.license.feature/**" />
	    </fileset>
      	</copy>

      	<mkdir dir="${buildDirectory}/tmp/${collectingFolder}/bin"/> 
        <replace dir="${buildDirectory}/plugins" value="${qualifier}" token="@buildId@"/>
        <replace dir="${buildDirectory}/plugins" value="${buildLabel}" token="@buildLabel@"/>
        <replace dir="${buildDirectory}/features" value="${qualifier}" token="@buildId@"/>
        <replace dir="${buildDirectory}/features" value="${buildLabel}" token="@buildLabel@"/>
    </target>

    <!-- ===================================================================== -->
    <!-- Steps to do after the build is done. -->
    <!-- ===================================================================== -->
    <target name="postBuild" depends="publish">
    </target>

    <!-- ===================================================================== -->
    <!-- Steps to do to publish the build results -->
    <!-- ===================================================================== -->
    <target name="publish" depends="shouldPublish" if="p2.should.publish">
        <p2.mirror>
            <source location="file:${buildDirectory}/${buildLabel}/p2/${topLevelElementId}"/>
            <destination location="file:${publishBase}/${buildLabel}.${qualifier}"/>
            <iu query="property[@name='org.eclipse.equinox.p2.type.category']"/>
        </p2.mirror>
        <symlink resource="${publishBase}/${buildLabel}.${qualifier}" link="${publishBase}/latest" overwrite="true"/>
    </target>

    <target name="shouldPublish">
        <condition property="p2.should.publish">
            <or>
                <equals arg1="${publishP2}" arg2="true" casesensitive="false"/>
                <equals arg1="${publishP2}" arg2="1" casesensitive="false"/>
            </or>
        </condition>
    </target>

</project>
